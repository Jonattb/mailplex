<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mailplex - Email Preview</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }
        .container { display: flex; height: 100vh; }
        .sidebar { width: 300px; background: #f5f5f5; border-right: 1px solid #ddd; overflow-y: auto; }
        .sidebar-tabs { 
            display: flex; 
            background: #e8e8e8; 
            border-bottom: 1px solid #ddd; 
        }
        .tab-button { 
            flex: 1; 
            padding: 12px 16px; 
            background: none; 
            border: none; 
            cursor: pointer; 
            font-size: 14px;
            font-weight: 500;
            color: #666;
            transition: all 0.2s;
            border-bottom: 2px solid transparent;
        }
        .tab-button:hover { 
            background: #d8d8d8; 
            color: #333;
        }
        .tab-button.active { 
            background: #f5f5f5; 
            color: #007acc;
            border-bottom-color: #007acc;
        }
        .preview { flex: 1; background: white; display: flex; flex-direction: column; }
        .navbar { 
            display: flex; 
            align-items: center; 
            padding: 12px 20px; 
            background: #fff; 
            border-bottom: 1px solid #ddd; 
            min-height: 60px;
        }
        .navbar-title { 
            font-weight: 600; 
            font-size: 16px; 
            color: #333; 
            flex: 1;
        }
        .navbar-center { 
            display: flex; 
            gap: 8px; 
            align-items: center;
        }
        .view-btn { 
            padding: 6px 12px; 
            border: 1px solid #ddd; 
            background: white; 
            border-radius: 4px; 
            cursor: pointer; 
            font-size: 12px;
            transition: all 0.2s;
        }
        .view-btn:hover { 
            background: #f5f5f5; 
        }
        .view-btn.active { 
            background: #007acc; 
            color: white; 
            border-color: #007acc;
        }
        .navbar-right { 
            margin-left: 20px;
        }
        .copy-btn { 
            padding: 8px 16px; 
            background: #28a745; 
            color: white; 
            border: none; 
            border-radius: 4px; 
            cursor: pointer; 
            font-size: 14px;
            transition: background 0.2s;
        }
        .copy-btn:hover { 
            background: #218838; 
        }
        .copy-btn:active { 
            background: #1e7e34; 
        }
        .preview-container { 
            flex: 1; 
            overflow: hidden; 
            display: flex; 
            justify-content: center; 
            align-items: flex-start; 
            padding: 20px;
            background: #f8f9fa;
        }
        .preview-frame { 
            transition: all 0.3s ease; 
            border: 1px solid #ddd; 
            border-radius: 8px; 
            background: white; 
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .sidebar h2 { padding: 20px; background: #333; color: white; margin: 0; }
        .sidebar ul { list-style: none; }
        .sidebar li { border-bottom: 1px solid #ddd; }
        .sidebar a { display: block; padding: 15px 20px; text-decoration: none; color: #333; }
        .sidebar a:hover { background: #e9e9e9; }
        .sidebar a.active { background: #007acc; color: white; }
        .folder { margin-left: 0; }
        .folder-header { 
            display: flex; 
            align-items: center; 
            padding: 10px 20px; 
            background: #e0e0e0; 
            cursor: pointer; 
            font-weight: bold;
            border-bottom: 1px solid #ddd;
        }
        .folder-header:hover { background: #d5d5d5; }
        .folder-icon { 
            margin-right: 8px; 
            width: 16px; 
            text-align: center;
            font-family: monospace;
        }
        .folder-content { 
            display: none;
        }
        .folder-content.expanded { 
            display: block; 
        }
        .folder-content .sidebar ul { 
            margin-left: 20px; 
        }
        .file-item {
            padding-left: 40px;
        }
        .preview-content { padding: 20px; }
        .no-preview { color: #666; text-align: center; margin-top: 50px; }
        
        /* Responsive view styles */
        .preview-frame.phone { width: 375px; height: 667px; }
        .preview-frame.tablet { width: 768px; height: min(1024px, 85vh); }
        .preview-frame.desktop { width: 1200px; height: min(800px, 85vh); }
        .preview-frame.fullpage { 
            width: 100%; 
            height: 100%; 
            margin: 0; 
            border-radius: 0; 
        }
        
        .preview-container.fullpage {
            padding: 0;
        }
        
        .preview-frame iframe { 
            width: 100%; 
            height: 100%; 
            border: none; 
            border-radius: 7px;
        }
        
        .preview-frame.fullpage iframe { 
            border-radius: 0;
        }
        
        .copy-success {
            background: #28a745 !important;
            opacity: 0.8;
        }
        
        .copy-success::after {
            content: ' ✓';
        }
        
        /* Validation status styles */
        .validation-icon {
            margin-left: 10px;
            cursor: pointer;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 18px;
            transition: background-color 0.2s;
        }
        
        .validation-icon:hover {
            background-color: rgba(0, 0, 0, 0.1);
        }
        
        .validation-icon.success {
            color: #28a745;
        }
        
        .validation-icon.warning {
            color: #ffc107;
        }
        
        .validation-icon.error {
            color: #dc3545;
        }
        
        /* Error console styles */
        .error-console {
            display: none;
            position: fixed;
            bottom: 0;
            left: 300px; /* Start after sidebar */
            right: 0;
            height: 350px;
            background: #1e1e1e;
            border-top: 2px solid #333;
            box-shadow: 0 -2px 15px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            flex-direction: column;
        }
        
        .error-console.open {
            display: flex;
        }
        
        .console-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 20px;
            background: #2d2d2d;
            border-bottom: 1px solid #444;
        }
        
        .console-header h3 {
            margin: 0;
            font-size: 14px;
            color: #e0e0e0;
            font-weight: 500;
        }
        
        .close-console {
            background: none;
            border: none;
            font-size: 18px;
            cursor: pointer;
            color: #999;
            padding: 4px;
            width: 28px;
            height: 28px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
            transition: all 0.2s;
        }
        
        .close-console:hover {
            background: #444;
            color: #fff;
        }
        
        .console-content {
            flex: 1;
            overflow-y: auto;
            padding: 16px 20px;
            background: #1e1e1e;
        }
        
        .issue-item {
            padding: 12px 16px;
            margin-bottom: 8px;
            border-left: 3px solid;
            background: #2a2a2a;
            border-radius: 0 6px 6px 0;
            transition: background 0.2s;
        }
        
        .issue-item:hover {
            background: #333;
        }
        
        .issue-item.error {
            border-left-color: #f56565;
            background: rgba(245, 101, 101, 0.1);
        }
        
        .issue-item.warning {
            border-left-color: #ed8936;
            background: rgba(237, 137, 54, 0.1);
        }
        
        .issue-header {
            display: flex;
            align-items: center;
            margin-bottom: 6px;
        }
        
        .issue-type {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 11px;
            margin-right: 12px;
            padding: 2px 6px;
            border-radius: 3px;
            letter-spacing: 0.5px;
        }
        
        .issue-type.error {
            color: #f56565;
            background: rgba(245, 101, 101, 0.2);
        }
        
        .issue-type.warning {
            color: #ed8936;
            background: rgba(237, 137, 54, 0.2);
        }
        
        .issue-location {
            font-size: 11px;
            color: #888;
            font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
        }
        
        .issue-message {
            margin: 6px 0;
            color: #e0e0e0;
            font-size: 14px;
            line-height: 1.4;
        }
        
        .issue-code {
            font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
            background: #333;
            padding: 6px 10px;
            border-radius: 4px;
            font-size: 12px;
            color: #ffc658;
            margin-top: 6px;
            border: 1px solid #444;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="sidebar">
            <h2><%= it.activeTab === 'components' ? 'Components' : 'Email Templates' %></h2>
            <div class="sidebar-tabs">
                <button class="tab-button <%= it.activeTab === 'emails' ? 'active' : '' %>" onclick="switchTab('emails')">
                    📧 Emails
                </button>
                <button class="tab-button <%= it.activeTab === 'components' ? 'active' : '' %>" onclick="switchTab('components')">
                    🧩 Components
                </button>
            </div>
            <ul>
                <%~ include('folder-structure', {
                    files: it.structure.files,
                    folders: it.structure.folders,
                    selectedItem: it.selectedItem,
                    activeTab: it.activeTab
                }) %>
                <% if (it.structure.files.length === 0 && it.structure.folders.length === 0) { %>
                    <li style="padding: 20px; color: #666;">
                        <%= it.activeTab === 'components' ? 'No components found' : 'No email templates found' %>
                    </li>
                <% } %>
            </ul>
        </div>
        <div class="preview">
            <div class="navbar">
                <div class="navbar-title">
                    <% if (it.selectedItem) { %>
                        <%= it.selectedItem %>
                        <% if (it.validation) { %>
                            <span class="validation-icon <%= it.validation.status %>" onclick="toggleErrorConsole()" title="<%= it.validation.status === 'success' ? 'No issues found' : (it.validation.issues.length + ' ' + (it.validation.issues.length === 1 ? 'issue' : 'issues') + ' found') %>">
                                <% if (it.validation.status === 'success') { %>
                                    ✅
                                <% } else if (it.validation.status === 'warning') { %>
                                    ⚠️
                                <% } else { %>
                                    ❌
                                <% } %>
                            </span>
                        <% } %>
                    <% } else { %>
                        <%= it.activeTab === 'components' ? 'Component Preview' : 'Email Preview' %>
                    <% } %>
                </div>
                <div class="navbar-center">
                    <button class="view-btn" data-view="phone">📱 Phone</button>
                    <button class="view-btn active" data-view="tablet">📱 Tablet</button>
                    <button class="view-btn" data-view="desktop">🖥️ Desktop</button>
                    <button class="view-btn" data-view="fullpage">🔍 Full Page</button>
                </div>
                <div class="navbar-right">
                    <% if (it.previewContent) { %>
                        <button class="copy-btn" onclick="copyHTML()">Copy HTML</button>
                    <% } %>
                </div>
            </div>
            <div class="preview-container">
                <% if (it.previewContent) { %>
                    <div class="preview-frame tablet" id="previewFrame">
                        <iframe srcdoc="<%~ it.previewContent %>" id="previewIframe"></iframe>
                    </div>
                <% } else { %>
                    <div class="no-preview">
                        <%= it.activeTab === 'components' ? 'Select a component to preview' : 'Select an email template to preview' %>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Error Console -->
    <div id="errorConsole" class="error-console">
        <div class="console-header">
            <h3>Template Issues</h3>
            <button class="close-console" onclick="toggleErrorConsole()">×</button>
        </div>
        <div class="console-content">
            <% if (it.validation && it.validation.issues && it.validation.issues.length > 0) { %>
                <% it.validation.issues.forEach(function(issue) { %>
                    <div class="issue-item <%= issue.type %>">
                        <div class="issue-header">
                            <span class="issue-type <%= issue.type %>"><%= issue.type %></span>
                            <% if (issue.line) { %>
                                <span class="issue-location">Line <%= issue.line %><% if (issue.column) { %>, Column <%= issue.column %><% } %></span>
                            <% } %>
                        </div>
                        <div class="issue-message"><%= issue.message %></div>
                        <% if (issue.code) { %>
                            <div class="issue-code"><%= issue.code %></div>
                        <% } %>
                    </div>
                <% }); %>
            <% } else if (it.validation && it.validation.status === 'success') { %>
                <div style="text-align: center; color: #68d391; padding: 40px;">
                    <div style="font-size: 48px;">✅</div>
                    <div style="margin-top: 10px; font-size: 18px; color: #e0e0e0;">No issues found!</div>
                    <div style="color: #888; margin-top: 5px; font-size: 14px;">Your template is valid and ready to use.</div>
                </div>
            <% } else { %>
                <div style="text-align: center; color: #888; padding: 40px;">
                    <div style="font-size: 24px;">📝</div>
                    <div style="margin-top: 10px; color: #999; font-size: 16px;">Select a template to see validation results</div>
                </div>
            <% } %>
        </div>
    </div>

    <script>
        function toggleFolder(header) {
            const folderContent = header.nextElementSibling;
            const icon = header.querySelector('.folder-icon');
            
            if (folderContent.classList.contains('expanded')) {
                folderContent.classList.remove('expanded');
                icon.textContent = '▶';
            } else {
                folderContent.classList.add('expanded');
                icon.textContent = '▼';
            }
        }

        // View switching functionality
        function switchView(viewType) {
            const previewFrame = document.getElementById('previewFrame');
            const previewContainer = document.querySelector('.preview-container');
            const viewButtons = document.querySelectorAll('.view-btn');
            
            if (!previewFrame) return;
            
            // Update frame class
            previewFrame.className = `preview-frame ${viewType}`;
            
            // Update container class for fullpage
            if (viewType === 'fullpage') {
                previewContainer.classList.add('fullpage');
            } else {
                previewContainer.classList.remove('fullpage');
            }
            
            // Update active button
            viewButtons.forEach(btn => btn.classList.remove('active'));
            document.querySelector(`[data-view="${viewType}"]`).classList.add('active');
        }
        
        // Copy HTML functionality
        async function copyHTML() {
            const iframe = document.getElementById('previewIframe');
            const copyBtn = document.querySelector('.copy-btn');
            
            if (!iframe) return;
            
            try {
                // Get the iframe content (the processed HTML without custom directives)
                const iframeContent = iframe.getAttribute('srcdoc');
                
                await navigator.clipboard.writeText(iframeContent);
                
                // Visual feedback
                const originalText = copyBtn.textContent;
                copyBtn.textContent = 'Copied!';
                copyBtn.classList.add('copy-success');
                
                setTimeout(() => {
                    copyBtn.textContent = originalText;
                    copyBtn.classList.remove('copy-success');
                }, 2000);
                
            } catch (err) {
                console.error('Failed to copy HTML:', err);
                copyBtn.textContent = 'Copy Failed';
                setTimeout(() => {
                    copyBtn.textContent = 'Copy HTML';
                }, 2000);
            }
        }

        function switchTab(tab) {
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('tab', tab);
            urlParams.delete('preview'); // Clear preview when switching tabs
            window.location.href = '?' + urlParams.toString();
        }

        function toggleErrorConsole() {
            const console = document.getElementById('errorConsole');
            console.classList.toggle('open');
        }

        // Auto-expand folders that contain the currently selected item
        document.addEventListener('DOMContentLoaded', function() {
            const activeLink = document.querySelector('.sidebar a.active');
            if (activeLink) {
                let parent = activeLink.closest('.folder-content');
                while (parent) {
                    parent.classList.add('expanded');
                    const header = parent.previousElementSibling;
                    if (header && header.classList.contains('folder-header')) {
                        header.querySelector('.folder-icon').textContent = '▼';
                    }
                    parent = parent.parentElement.closest('.folder-content');
                }
            }
            
            // Add event listeners to view buttons
            document.querySelectorAll('.view-btn').forEach(btn => {
                btn.addEventListener('click', () => {
                    switchView(btn.getAttribute('data-view'));
                });
            });
        });
    </script>
</body>
</html>